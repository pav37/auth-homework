{
	"info": {
		"_postman_id": "a5d80915-8a4c-4186-ba5f-f8a4b943a9d2",
		"name": "UserRegistration/Auth_Arch",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User 1 Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {",
							"  pm.response.to.have.status(201);",
							"});",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"user1Id\", responseJSON[\"id\"])",
							"console.log(pm.request)",
							"console.log(pm.response)",
							"console.log(responseBody)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set('username1', pm.variables.replaceIn(\"{{$randomUserName}}\"))\r",
							"pm.collectionVariables.set('password1', pm.variables.replaceIn(\"{{$randomLoremWord}}\"))\r",
							"console.log(\"username1: \" + pm.collectionVariables.get('username1'))\r",
							"console.log(\"password1: \" + pm.collectionVariables.get('password1'))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"username\": \"{{username1}}\", \"email\": \"{{$randomLoremWord}}@arch.homework\", \"password\": \"{{password1}}\", \"firstName\": \"{{$randomFirstName}}\", \"lastName\": \"{{$randomLastName}}\"  }"
				},
				"url": {
					"raw": "http://{{baseUrl}}/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 1 Get Without Login (Redirect to Login)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Redirected to Login page', () => {\r",
							"    pm.expect(responseBody).to.contains(\"sign in\")\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"strictSSL": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{baseUrl}}/users/{{user1Id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{user1Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 1 Update Without Login (Redirect to Login)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Redirected to Login page', () => {\r",
							"    pm.expect(responseBody).to.contains(\"sign in\")\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set('firstName1_Update', pm.variables.replaceIn(\"{{$randomFirstName}}\"))\r",
							"pm.collectionVariables.set('lastName1_Update', pm.variables.replaceIn(\"{{$randomLastName}}\"))\r",
							"console.log(\"firstName1_Update: \" + pm.collectionVariables.get('firstName1_Update'))\r",
							"console.log(\"lastName1_Update: \" + pm.collectionVariables.get('lastName1_Update'))"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"{{username1}}\", \"firstName\": \"{{firstName1_Update}}\", \"lastName\": \"{{lastName1_Update}}\"}"
				},
				"url": {
					"raw": "http://{{baseUrl}}/users/{{user1Id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{user1Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 1 Init Session",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", () => {\r",
							"  pm.response.to.have.status(401);\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"strictSSL": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{baseUrl}}/hello",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hello"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 1 Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "{{username1}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password1}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 1 Get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)\r",
							"console.log(responseBody)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"strictSSL": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{baseUrl}}/users/{{user1Id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{user1Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 1 Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var responseJSON = JSON.parse(responseBody)\r",
							"console.log(responseJSON)\r",
							"pm.test('FirstName is correct', () => {\r",
							"  pm.expect(responseJSON['firstName']).to.eql(pm.collectionVariables.get(\"firstName1_Update\"));\r",
							"});\r",
							"pm.test('LastName is correct', () => {\r",
							"  pm.expect(responseJSON['lastName']).to.eql(pm.collectionVariables.get(\"lastName1_Update\"));\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set('firstName1_Update', pm.variables.replaceIn(\"{{$randomFirstName}}\"))\r",
							"pm.collectionVariables.set('lastName1_Update', pm.variables.replaceIn(\"{{$randomLastName}}\"))\r",
							"console.log(\"firstName1_Update: \" + pm.collectionVariables.get('firstName1_Update'))\r",
							"console.log(\"lastName1_Update: \" + pm.collectionVariables.get('lastName1_Update'))"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"{{username1}}\", \"firstName\": \"{{firstName1_Update}}\", \"lastName\": \"{{lastName1_Update}}\"}"
				},
				"url": {
					"raw": "http://{{baseUrl}}/users/{{user1Id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{user1Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 1 Test App (Hello Endpoint)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)\r",
							"console.log(responseBody)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"strictSSL": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{baseUrl}}/hello",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hello"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 1 Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"strictSSL": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{baseUrl}}/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 2 Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {",
							"  pm.response.to.have.status(201);",
							"});",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"user2Id\", responseJSON[\"id\"])",
							"console.log(pm.request)",
							"console.log(pm.response)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set('username2', pm.variables.replaceIn(\"{{$randomUserName}}\"))\r",
							"pm.collectionVariables.set('password2', pm.variables.replaceIn(\"{{$randomLoremWord}}\"))\r",
							"console.log(\"username2: \" + pm.collectionVariables.get('username2'))\r",
							"console.log(\"password2: \" + pm.collectionVariables.get('password2'))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"username\": \"{{username2}}\", \"email\": \"{{$randomLoremWord}}@arch.homework\", \"password\": \"{{password2}}\", \"firstName\": \"{{$randomFirstName}}\", \"lastName\": \"{{$randomLastName}}\"  }"
				},
				"url": {
					"raw": "http://{{baseUrl}}/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 2 Init Session",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", () => {\r",
							"  pm.response.to.have.status(401);\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"strictSSL": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{baseUrl}}/hello",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hello"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 2 Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "{{username2}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password2}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 2 Get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"strictSSL": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{baseUrl}}/users/{{user2Id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{user2Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 2 Get User1 (Access Denied)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", () => {\r",
							"  pm.response.to.have.status(403);\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"strictSSL": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{baseUrl}}/users/{{user1Id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{user1Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 2 Update User1 (Access Denied)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", () => {\r",
							"  pm.response.to.have.status(403);\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set('firstName1_Update', pm.variables.replaceIn(\"{{$randomFirstName}}\"))\r",
							"pm.collectionVariables.set('lastName1_Update', pm.variables.replaceIn(\"{{$randomLastName}}\"))\r",
							"console.log(\"firstName1_Update: \" + pm.collectionVariables.get('firstName1_Update'))\r",
							"console.log(\"lastName1_Update: \" + pm.collectionVariables.get('lastName1_Update'))"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"{{username1}}\", \"firstName\": \"{{firstName1_Update}}\", \"lastName\": \"{{lastName1_Update}}\"}"
				},
				"url": {
					"raw": "http://{{baseUrl}}/users/{{user1Id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{user1Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 2 Test App (Hello Endpoint)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)\r",
							"console.log(responseBody)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"strictSSL": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{baseUrl}}/hello",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hello"
					]
				}
			},
			"response": []
		},
		{
			"name": "User 2 Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(pm.request)\r",
							"console.log(pm.response)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"strictSSL": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{baseUrl}}/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userId",
			"value": 3
		},
		{
			"key": "baseUrl",
			"value": "arch.homework"
		},
		{
			"key": "username1",
			"value": ""
		},
		{
			"key": "password1",
			"value": ""
		},
		{
			"key": "user1Id",
			"value": ""
		},
		{
			"key": "username2",
			"value": ""
		},
		{
			"key": "password2",
			"value": ""
		},
		{
			"key": "user2Id",
			"value": ""
		},
		{
			"key": "firstName1_Update",
			"value": ""
		},
		{
			"key": "lastName1_Update",
			"value": ""
		}
	]
}